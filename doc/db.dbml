Project go_exchange {
  database_type: 'PostgreSQL'
  Note: '''
    # Go Exchange Database
  '''
}

Table users as U {
  username varchar [pk]
  hashed_password varchar [not null]
  full_name varchar [not null]
  email varchar [unique, not null]
  password_changed_at timestamptz [not null, default: '0001-01-01 00:00:00Z']
  created_at timestamptz [not null, default: `now()`]
}

Table accounts as A {
  id bigserial [pk]
  owner varchar [ref: > U.username, not null]
  balance bigint [not null]
  currency varchar [not null]
  created_at timestamptz [not null, default: `now()`]
  
  Indexes {
    owner
    (owner, currency) [unique]
  }
}

Table entries {
  id bigserial [pk]
  account_id bigint [ref: > A.id, not null]
  amount bigint [not null, note: 'can be negative or positive']
  created_at timestamptz [not null, default: `now()`]
  
  Indexes {
    account_id
  }
}

Table transfers as T {
  id bigserial [pk]
  from_account_id bigint [ref: > A.id, not null]
  to_account_id bigint [ref: > A.id, not null]
  amount bigint [not null, note: 'it must be positive']
  created_at timestamptz [not null, default: `now()`]
  
  Indexes {
    from_account_id
    to_account_id
    (from_account_id, to_account_id)
  }
}

Table trades {
  id bigserial [pk]
  
  first_from_account_id bigint [ref: > A.id, not null]
  first_to_account_id bigint [ref: > A.id, not null]
  first_amount bigint [not null, note: 'it must be positive']
  
  second_from_account_id bigint [ref: > A.id, not null]
  second_to_account_id bigint [ref: > A.id, not null]
  second_amount bigint [not null, note: 'it must be positive']

  created_at timestamptz [not null, default: `now()`]
  
  Indexes {
    first_from_account_id
    first_to_account_id
    second_from_account_id
    second_to_account_id
  }
}

Table bids {
  id bigserial [pk]
  pair varchar [not null]
  from_account_id bigint [ref: > A.id, not null]
  to_account_id bigint [ref: > A.id, not null]
  price bigint [not null]
  amount bigint [not null, note: 'it must be positive']
  status varchar [not null]
  created_at timestamptz [not null, default: `now()`]
  
  Indexes {
    pair
    from_account_id
    to_account_id
    (from_account_id, to_account_id)
    status
  }
}

Table asks {
  id bigserial [pk]
  pair varchar [not null]
  from_account_id bigint [ref: > A.id, not null]
  to_account_id bigint [ref: > A.id, not null]
  price bigint [not null]
  amount bigint [not null, note: 'it must be positive']
  status varchar [not null]
  created_at timestamptz [not null, default: `now()`]
  
  Indexes {
    pair
    from_account_id
    to_account_id
    (from_account_id, to_account_id)
    status
  }
}

Table sessions {
  id uuid [pk]
  username varchar [ref: > U.username, not null]
  refresh_token varchar [not null]
  user_agent varchar [not null]
  client_ip varchar [not null]
  is_blocked boolean [not null, default: false]
  expires_at timestamptz [not null]
  created_at timestamptz [not null, default: `now()`]
}
